import datetime
import time
from celery import shared_task

from osa_expert_admin.settings import MY_LOGGER
from osa_gpt.gpt_processing import make_embeddings
from osa_gpt.models import BotSettings, KnowledgeBaseChunks
from osa_gpt.utils import send_message_by_bot


@shared_task
def scheduled_task_example():
    """
    –ü—Ä–∏–º–µ—Ä –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å.
    """
    time.sleep(5)
    print(f'–ü—Ä–∏–≤–µ—Ç –º–∏—Ä, —è –æ—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞. –°–µ–π—á–∞—Å: {datetime.datetime.utcnow()}')


@shared_task
def send_notifications(appl_pk, client_name, phone_number, description):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º –±–æ—Ç–∞ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ.
    """
    MY_LOGGER.info('–°—Ç–∞—Ä—Ç –∑–∞–¥–∞—á–∏ celery –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–¥–º–∏–Ω–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ')
    bot_admins_qset = BotSettings.objects.filter(key='bot_admins').only('value')
    for i_admin in bot_admins_qset:
        send_message_by_bot(
            chat_id=i_admin.value,
            text=f'üî• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –∏–∑ –±–æ—Ç–∞!\n\nüîπ ‚Ññ –∑–∞—è–≤–∫–∏: {appl_pk}\nüîπ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: {client_name}\n'
                 f'üîπ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}\nüîπ –û–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏: {description}'
        )
    MY_LOGGER.info(f'–ö–æ–Ω–µ—Ü —Ç–∞—Å–∫–∞ celery')


@shared_task
def knowledge_base_processing(knowledge_base_text: str):
    """
    –¢–∞—Å–∫ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –≤ –ë–î —á–∞–Ω–∫–æ–≤ –ë–ó —Å –≤–µ–∫—Ç–æ—Ä–∞–º–∏
    """
    MY_LOGGER.info(f'–°—Ç–∞—Ä—Ç –∑–∞–¥–∞—á–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –≤ –ë–î —á–∞–Ω–∫–æ–≤ –ë–ó —Å –≤–µ–∫—Ç–æ—Ä–∞–º–∏')
    embeddings_lst = make_embeddings(knowledge_base_text=knowledge_base_text)
    KnowledgeBaseChunks.objects.all().delete()
    knowledge_base_lst = list()
    for i_chunk in embeddings_lst:
        vectors = list(map(lambda vector: str(vector), i_chunk[1]))
        knowledge_base_lst.append(KnowledgeBaseChunks(text=i_chunk[0], embedding=' '.join(vectors)))
    KnowledgeBaseChunks.objects.bulk_create(knowledge_base_lst)
    MY_LOGGER.info(f'–û–∫–æ–Ω—á–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏')
